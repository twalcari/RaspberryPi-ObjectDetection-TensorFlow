FROM tensorflow/tensorflow:1.12.0-devel-gpu

WORKDIR /tensorflow

#RUN echo "/usr/local/cuda/lib64" > /etc/ld.so.conf.d/cuda.conf
#RUN ldconfig
RUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 \
  && LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH} \
         tensorflow/tools/ci_build/builds/configured GPU  \   
         bazel build -c opt --copt=-mavx --config=cuda  --cxxopt="-D_GLIBCXX_USE_CXX11_ABI=0" \    
         tensorflow/tools/graph_transforms:transform_graph \
  && rm /usr/local/cuda/lib64/stubs/libcuda.so.1 

#WORKDIR /root
#install tensorflow image_detection dependencies
RUN apt-get update \
    && apt-get -y --no-install-recommends install python-pil python-lxml python-tk \
    && apt-get clean && rm -rf /var/lib/apt/lists/* \ 
    && pip install Cython \
    && pip install contextlib2 \
    && pip install jupyter \
    && pip install matplotlib


WORKDIR /
RUN git clone --single-branch https://github.com/tensorflow/models.git
RUN git clone https://github.com/cocodataset/cocoapi.git
WORKDIR /cocoapi/PythonAPI
RUN make
RUN cp -r pycocotools /models/research/

WORKDIR /models/research/
RUN wget -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip && unzip protobuf.zip
RUN ./bin/protoc object_detection/protos/*.proto --python_out=.
ENV PYTHONPATH=$PYTHONPATH:/models/research/:/models/research/slim

# Add dataset into docker file
# Add volumes for output graph and
VOLUME /data

# Add files to dockerfile
ADD . /
RUN chmod +x /run.sh

EXPOSE 8000
ENTRYPOINT ["/run.sh"]

